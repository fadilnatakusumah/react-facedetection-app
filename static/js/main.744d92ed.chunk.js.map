{"version":3,"sources":["Components/Logo/little-cat-vector.png","Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Components/Signin/Signin.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignin","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","tilt_default","options","max","height","width","alt","src","cat","ImageLinkForm","onInputChange","onButtonSubmit","required","onChange","type","Rank","user","concat","name","entries","FaceRecognition","imageUrl","boxes","id","map","data","i","key","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","e","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","json","res","console","log","props","onLoadUser","alert","catch","err","htmlFor","href","React","Component","Register","onNameChange","signInName","onSubmitRegister","_this$state","pass","particlesConfig","particles","number","density","enable","value_area","App","inputField","calculateFaceLocation","image","document","getElementById","Number","faces","outputs","regions","push","region_info","bounding_box","left_col","top_row","right_col","bottom_row","joined","displayFacebox","box","input","response","route","srcImage","particles_default","params","Components_Navigation_Navigation","Components_Signin_Signin","Components_Register_Register","Components_Logo_Logo","Components_Rank_Rank","Components_ImageLinkForm_ImageLinkForm","Components_FaceRecognition_FaceRecognition","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.744d92ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/little-cat-vector.80d374b2.png\";","import React from 'react'\r\n\r\n\r\nconst Navigation = ({ onRouteChange, isSignin }) => {\r\n    if (!isSignin) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signin')} className=\"f3 link dim ba ph3 pv2 mb2 dib near-black pointer\">Sign in</p>\r\n                <p onClick={() => onRouteChange('register')} className=\"f3 link dim ba ph3 pv2 mb2 dib near-black pointer\">Register</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signin')} className=\"f3 link dim ba ph3 pv2 mb2 dib near-black pointer\">Sign out</p>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport cat from './little-cat-vector.png';\r\nimport './Logo.css';\r\n\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"\" style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 60 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\"> \r\n                    <img alt=\"Logo\" src={cat} style={{height: 130}}/>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\n\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className=\"f4\">\r\n                {'This Cat will detect your face in your image, just try it!'}\r\n            </p>\r\n            <div className=\"center\">\r\n                <div className=\"form center pa3 br3 shadow-5\">\r\n                    <input required onChange={onInputChange} className=\"f5 w-70 center\" style={{height: 39}} type='text'/>\r\n                    <button onClick={onButtonSubmit} className=\"w-30 grow br2 f5 link dib ph3 pv2 mb2 dib black bg-yellow\">Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default ImageLinkForm;","import React from 'react'\r\n\r\n\r\nconst Rank = ({user}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"f3 white\">\r\n                {`Hey ${user.name}, Your current entry is ${user.entries}`}\r\n            </div>\r\n            {/* <div className=\"f1 white\">\r\n                {'3'}\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\n\r\n\r\nconst FaceRecognition = ({imageUrl, boxes}) => {\r\n    return (\r\n        <div className=\"center ma mt2 mb5\">\r\n            <div className=\"absolute mt2\">\r\n                <img id=\"imageInput\" alt=\"\" src={imageUrl} width=\"500px\" height=\"auto\"/>\r\n                {\r\n                    boxes.map((data, i) => {\r\n                       return <div key={i} className=\"bounding-box\" style={{top: data.topRow, right: data.rightCol, bottom: data.bottomRow, left:data.leftCol}}></div>\r\n                    })\r\n                \r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\n\r\nclass Signin extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (e) => {\r\n    this.setState({signInEmail: e.target.value});\r\n  }\r\n  \r\n  onPasswordChange = (e) => {\r\n    this.setState({signInPassword: e.target.value});\r\n  }\r\n\r\n  onSubmitSignIn = (e) => {\r\n    // console.log('Onsubmit clicked');\r\n    e.preventDefault();\r\n    fetch('https://nodejs-facedetection.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'Application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      })\r\n    })\r\n    .then(data => data.json())\r\n    .then(res => {\r\n      //  console.log(res[0]);\r\n      if(res[0].id){\r\n        console.log(\"Success sign in\");\r\n        this.props.onLoadUser(res[0]);\r\n        this.props.onRouteChange('registered');\r\n      }else{\r\n        console.log(\"Failed to sign in\");\r\n        alert('All field must filled!');\r\n      }\r\n    })\r\n    .catch(err => alert(\"There's an error: \"+ err));\r\n  }\r\n\r\n  render(){\r\n    const {onRouteChange} = this.props;\r\n    return (\r\n        <div className=\"br2 center ba dark-gray shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n        <div className=\"pa4 black-80\">\r\n          <form className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <div className=\"center\">\r\n                <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input \r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                  type=\"email\" \r\n                  name=\"email-address\" \r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input \r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                  type=\"password\" \r\n                  name=\"password\"  \r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input onClick={this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <a onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db i\">Register</a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n  \r\n  \r\n  export default Signin;","import React from 'react';\r\n\r\n\r\nclass Register extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      signInName: '',\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n  onNameChange = (e) => {\r\n    this.setState({signInName: e.target.value});\r\n  }\r\n\r\n  onEmailChange = (e) => {\r\n    this.setState({signInEmail: e.target.value});\r\n  }\r\n  \r\n  onPasswordChange = (e) => {\r\n    this.setState({signInPassword: e.target.value});\r\n  }\r\n\r\n  onSubmitRegister = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    const {name, pass, email} = this.state;\r\n      fetch('https://nodejs-facedetection.herokuapp.com/register', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'Application/json'},\r\n        body: JSON.stringify({\r\n          name: name,\r\n          email: email,\r\n          password: pass,\r\n        })\r\n      })\r\n      .then(data => data.json())\r\n      .then(user => {\r\n        if(user.id){\r\n          console.log(\"Success register user\", user);\r\n          this.props.onLoadUser(user);\r\n          this.props.onRouteChange('registered');\r\n        }else{\r\n          console.log(\"Failed to sign in\");\r\n        alert('All field must filled!');\r\n        }\r\n      })\r\n      .catch(err => alert(\"There's an error: \" + err))\r\n  }\r\n  render() {\r\n    const {onRouteChange} = this.props;\r\n    return (\r\n      <div className=\"br2 center ba dark-gray shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n        <div className=\"pa4 black-80\">\r\n          <form className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <div className=\"center\">\r\n                <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"email-address\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"\r\n                onClick={this.onSubmitRegister}\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <a onClick={() => onRouteChange('signin')} href=\"#0\" className=\"f6 link dim black db i\">Sign in</a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n      \r\n      \r\nexport default Register;","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport Logo from './Components/Logo/Logo';\r\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './Components/Rank/Rank';\r\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\r\nimport Signin from './Components/Signin/Signin';\r\nimport Register from './Components/Register/Register';\r\n\r\nimport './App.css';\r\n\r\nconst particlesConfig = {\r\n  particles: {\r\n    number: {\r\n      value: 60,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      inputField: '',\r\n      srcImage:'',\r\n      boxes: [],\r\n      route: 'signin',\r\n      isSignin: false, \r\n      user: null\r\n    }\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({inputField: e.target.value});\r\n  }\r\n  \r\n  calculateFaceLocation = (data) =>{\r\n    const image = document.getElementById('imageInput');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    // const clarifaiImage = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    let faces = [];\r\n    data.outputs[0].data.regions.map(function(data) {\r\n      faces.push({\r\n        leftCol: data.region_info.bounding_box.left_col*width,\r\n        topRow: data.region_info.bounding_box.top_row*height,\r\n        rightCol: width - (data.region_info.bounding_box.right_col*width),\r\n        bottomRow: height - (data.region_info.bounding_box.bottom_row*height)    \r\n      });\r\n      return true;\r\n    });\r\n    return faces;\r\n  }\r\n\r\n  onLoadUser = (data) => {\r\n    this.setState({user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  }\r\n\r\n  displayFacebox = (box) => {\r\n    // console.log(box);\r\n    this.setState({boxes: box});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    console.log('button submit clicked');\r\n    const {user, inputField} = this.state;\r\n    \r\n    fetch('https://nodejs-facedetection.herokuapp.com/imageUrl', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'Application/json'},\r\n      body: JSON.stringify({input: inputField})\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      this.displayFacebox(this.calculateFaceLocation(response))\r\n      fetch('https://nodejs-facedetection.herokuapp.com/image', {\r\n        method: 'put',\r\n        headers: {\r\n          'Content-Type': 'Application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          id: user.id\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(user => {\r\n        // console.log(user);\r\n        this.onLoadUser(user[0]);\r\n        console.log('Success checking image');\r\n      });\r\n    })\r\n    .catch(err => alert(\"There's an error: \"+ err)) \r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if(route === 'signed' || route === 'registered'){\r\n      this.setState({isSignin: true});\r\n    }else{\r\n      this.setState({isSignin: false});\r\n      this.setState({user: {}});\r\n      this.setState({inputField: ''});\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (  \r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={particlesConfig} />\r\n        <Navigation onRouteChange={this.onRouteChange} isSignin = {this.state.isSignin}/>\r\n        {\r\n          this.state.route === 'signin' \r\n          ? <Signin onLoadUser={this.onLoadUser} onRouteChange={this.onRouteChange}/>\r\n          : (\r\n            this.state.route === 'register' \r\n            ? <Register onLoadUser= {this.onLoadUser} onRouteChange={this.onRouteChange}/>\r\n            : <div>\r\n                <Logo user = {this.state.user}/>\r\n\r\n                <Rank user = {this.state.user}/>\r\n                <ImageLinkForm \r\n                  onInputChange={this.onInputChange}\r\n                  onButtonSubmit={this.onButtonSubmit}\r\n                />\r\n                <FaceRecognition imageUrl = {this.state.inputField} boxes={this.state.boxes}/>    \r\n              </div>\r\n          ) \r\n        }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}